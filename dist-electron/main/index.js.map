{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from \"electron\";\nimport { createRequire } from \"node:module\";\nimport type {\n    ProgressInfo,\n    UpdateDownloadedEvent,\n    UpdateInfo,\n} from \"electron-updater\";\n\nconst { autoUpdater } = createRequire(import.meta.url)(\"electron-updater\");\n\nexport function update(win: Electron.BrowserWindow) {\n    // When set to false, the update download will be triggered through the API\n    autoUpdater.autoDownload = false;\n    autoUpdater.disableWebInstaller = false;\n    autoUpdater.allowDowngrade = false;\n\n    // start check\n    autoUpdater.on(\"checking-for-update\", function () {});\n    // update available\n    autoUpdater.on(\"update-available\", (arg: UpdateInfo) => {\n        win.webContents.send(\"update-can-available\", {\n            update: true,\n            version: app.getVersion(),\n            newVersion: arg?.version,\n        });\n    });\n    // update not available\n    autoUpdater.on(\"update-not-available\", (arg: UpdateInfo) => {\n        win.webContents.send(\"update-can-available\", {\n            update: false,\n            version: app.getVersion(),\n            newVersion: arg?.version,\n        });\n    });\n\n    // Checking for updates\n    ipcMain.handle(\"check-update\", async () => {\n        if (!app.isPackaged) {\n            const error = new Error(\n                \"The update feature is only available after the package.\"\n            );\n            return { message: error.message, error };\n        }\n\n        try {\n            return await autoUpdater.checkForUpdatesAndNotify();\n        } catch (error) {\n            return { message: \"Network error\", error };\n        }\n    });\n\n    // Start downloading and feedback on progress\n    ipcMain.handle(\"start-download\", (event: Electron.IpcMainInvokeEvent) => {\n        startDownload(\n            (error, progressInfo) => {\n                if (error) {\n                    // feedback download error message\n                    event.sender.send(\"update-error\", {\n                        message: error.message,\n                        error,\n                    });\n                } else {\n                    // feedback update progress message\n                    event.sender.send(\"download-progress\", progressInfo);\n                }\n            },\n            () => {\n                // feedback update downloaded message\n                event.sender.send(\"update-downloaded\");\n            }\n        );\n    });\n\n    // Install now\n    ipcMain.handle(\"quit-and-install\", () => {\n        autoUpdater.quitAndInstall(false, true);\n    });\n}\n\nfunction startDownload(\n    callback: (error: Error | null, info: ProgressInfo | null) => void,\n    complete: (event: UpdateDownloadedEvent) => void\n) {\n    autoUpdater.on(\"download-progress\", (info: ProgressInfo) =>\n        callback(null, info)\n    );\n    autoUpdater.on(\"error\", (error: Error) => callback(error, null));\n    autoUpdater.on(\"update-downloaded\", complete);\n    autoUpdater.downloadUpdate();\n}\n","import { app, BrowserWindow, shell, ipcMain } from \"electron\";\nimport { createRequire } from \"node:module\";\nimport { fileURLToPath } from \"node:url\";\nimport path from \"node:path\";\nimport os from \"node:os\";\nimport { update } from \"./update\";\nimport AppServer from \"../../src-api/server\";\n\nconst require = createRequire(import.meta.url);\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.mjs   > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.APP_ROOT = path.join(__dirname, \"../..\");\n\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, \"dist-electron\");\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, \"dist\");\nexport const VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL;\n\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\n    ? path.join(process.env.APP_ROOT, \"public\")\n    : RENDERER_DIST;\n\n// Disable GPU Acceleration for Windows 7\nif (os.release().startsWith(\"6.1\")) app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === \"win32\") app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n    app.quit();\n    process.exit(0);\n}\n\nlet win: BrowserWindow | null = null;\nconst preload = path.join(__dirname, \"../preload/index.mjs\");\nconst indexHtml = path.join(RENDERER_DIST, \"index.html\");\n\nasync function createWindow() {\n    win = new BrowserWindow({\n        title: \"Main window\",\n        icon: path.join(process.env.VITE_PUBLIC, \"favicon.ico\"),\n        webPreferences: {\n            preload,\n            // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n            // nodeIntegration: true,\n\n            // Consider using contextBridge.exposeInMainWorld\n            // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n            // contextIsolation: false,\n        },\n        titleBarStyle: \"hiddenInset\",\n        width: 1100,\n        height: 900,\n    });\n\n    if (VITE_DEV_SERVER_URL) {\n        // #298\n        win.loadURL(VITE_DEV_SERVER_URL);\n        // Open devTool if the app is not packaged\n        win.webContents.openDevTools();\n    } else {\n        win.loadFile(indexHtml);\n        win.webContents.openDevTools();\n    }\n\n    // Test actively push message to the Electron-Renderer\n    win.webContents.on(\"did-finish-load\", () => {\n        win?.webContents.send(\n            \"main-process-message\",\n            new Date().toLocaleString()\n        );\n        const userDataPath = app.getPath(\"userData\");\n        win?.webContents.send(\"app-path\", userDataPath);\n    });\n\n    // Make all links open with the browser, not with the application\n    win.webContents.setWindowOpenHandler(({ url }) => {\n        if (url.startsWith(\"https:\")) shell.openExternal(url);\n        return { action: \"deny\" };\n    });\n\n    // Auto update\n    update(win);\n}\n\napp.whenReady().then(() => {\n    createWindow();\n    // // 启动后端服务\n    // if (VITE_DEV_SERVER_URL === undefined) {\n    //     const server = new AppServer();\n    //     server.start();\n    // }\n    // const server = new AppServer();\n    // server.start();\n});\n\napp.on(\"window-all-closed\", () => {\n    win = null;\n    if (process.platform !== \"darwin\") app.quit();\n});\n\napp.on(\"second-instance\", () => {\n    if (win) {\n        // Focus on the main window if the user tried to open another\n        if (win.isMinimized()) win.restore();\n        win.focus();\n    }\n});\n\napp.on(\"activate\", () => {\n    const allWindows = BrowserWindow.getAllWindows();\n    if (allWindows.length) {\n        allWindows[0].focus();\n    } else {\n        createWindow();\n    }\n});\n\n// New window example arg: new windows url\nipcMain.handle(\"open-win\", (_, arg) => {\n    const childWindow = new BrowserWindow({\n        webPreferences: {\n            preload,\n            nodeIntegration: true,\n            contextIsolation: false,\n        },\n    });\n\n    if (VITE_DEV_SERVER_URL) {\n        childWindow.loadURL(`${VITE_DEV_SERVER_URL}#${arg}`);\n    } else {\n        childWindow.loadFile(indexHtml, { hash: arg });\n    }\n});\n"],"names":["win"],"mappings":";;;;;AAQA,MAAM,EAAE,YAAY,IAAI,cAAc,YAAY,GAAG,EAAE,kBAAkB;AAElE,SAAS,OAAOA,MAA6B;AAEhD,cAAY,eAAe;AAC3B,cAAY,sBAAsB;AAClC,cAAY,iBAAiB;AAGjB,cAAA,GAAG,uBAAuB,WAAY;AAAA,EAAA,CAAE;AAExC,cAAA,GAAG,oBAAoB,CAAC,QAAoB;AAChD,IAAAA,KAAA,YAAY,KAAK,wBAAwB;AAAA,MACzC,QAAQ;AAAA,MACR,SAAS,IAAI,WAAW;AAAA,MACxB,YAAY,2BAAK;AAAA,IAAA,CACpB;AAAA,EAAA,CACJ;AAEW,cAAA,GAAG,wBAAwB,CAAC,QAAoB;AACpD,IAAAA,KAAA,YAAY,KAAK,wBAAwB;AAAA,MACzC,QAAQ;AAAA,MACR,SAAS,IAAI,WAAW;AAAA,MACxB,YAAY,2BAAK;AAAA,IAAA,CACpB;AAAA,EAAA,CACJ;AAGO,UAAA,OAAO,gBAAgB,YAAY;AACnC,QAAA,CAAC,IAAI,YAAY;AACjB,YAAM,QAAQ,IAAI;AAAA,QACd;AAAA,MAAA;AAEJ,aAAO,EAAE,SAAS,MAAM,SAAS,MAAM;AAAA,IAC3C;AAEI,QAAA;AACO,aAAA,MAAM,YAAY;aACpB,OAAO;AACL,aAAA,EAAE,SAAS,iBAAiB;IACvC;AAAA,EAAA,CACH;AAGO,UAAA,OAAO,kBAAkB,CAAC,UAAuC;AACrE;AAAA,MACI,CAAC,OAAO,iBAAiB;AACrB,YAAI,OAAO;AAED,gBAAA,OAAO,KAAK,gBAAgB;AAAA,YAC9B,SAAS,MAAM;AAAA,YACf;AAAA,UAAA,CACH;AAAA,QAAA,OACE;AAEG,gBAAA,OAAO,KAAK,qBAAqB,YAAY;AAAA,QACvD;AAAA,MACJ;AAAA,MACA,MAAM;AAEI,cAAA,OAAO,KAAK,mBAAmB;AAAA,MACzC;AAAA,IAAA;AAAA,EACJ,CACH;AAGO,UAAA,OAAO,oBAAoB,MAAM;AACzB,gBAAA,eAAe,OAAO,IAAI;AAAA,EAAA,CACzC;AACL;AAEA,SAAS,cACL,UACA,UACF;AACc,cAAA;AAAA,IAAG;AAAA,IAAqB,CAAC,SACjC,SAAS,MAAM,IAAI;AAAA,EAAA;AAEvB,cAAY,GAAG,SAAS,CAAC,UAAiB,SAAS,OAAO,IAAI,CAAC;AACnD,cAAA,GAAG,qBAAqB,QAAQ;AAC5C,cAAY,eAAe;AAC/B;ACjFgB,cAAc,YAAY,GAAG;AAC7C,MAAM,YAAY,KAAK,QAAQ,cAAc,YAAY,GAAG,CAAC;AAY7D,QAAA,IAAY,WAAW,KAAK,KAAK,WAAW,OAAO;AAE5C,MAAM,YAAY,KAAK,KAAK,QAAA,IAAY,UAAU,eAAe;AACjE,MAAM,gBAAgB,KAAK,KAAK,QAAA,IAAY,UAAU,MAAM;AACtD,MAAA,sBAAsB,QAAY,IAAA;AAE/C,QAAA,IAAY,cAAc,sBACpB,KAAK,KAAK,QAAY,IAAA,UAAU,QAAQ,IACxC;AAGN,IAAI,GAAG,QAAQ,EAAE,WAAW,KAAK,OAAO;AAGxC,IAAI,QAAQ,aAAa,aAAa,kBAAkB,IAAI,SAAS;AAErE,IAAI,CAAC,IAAI,6BAA6B;AAClC,MAAI,KAAK;AACT,UAAQ,KAAK,CAAC;AAClB;AAEA,IAAI,MAA4B;AAChC,MAAM,UAAU,KAAK,KAAK,WAAW,sBAAsB;AAC3D,MAAM,YAAY,KAAK,KAAK,eAAe,YAAY;AAEvD,eAAe,eAAe;AAC1B,QAAM,IAAI,cAAc;AAAA,IACpB,OAAO;AAAA,IACP,MAAM,KAAK,KAAK,QAAA,IAAY,aAAa,aAAa;AAAA,IACtD,gBAAgB;AAAA,MACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOJ;AAAA,IACA,eAAe;AAAA,IACf,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACX;AAED,MAAI,qBAAqB;AAErB,QAAI,QAAQ,mBAAmB;AAE/B,QAAI,YAAY;EAAa,OAC1B;AACH,QAAI,SAAS,SAAS;AACtB,QAAI,YAAY;EACpB;AAGI,MAAA,YAAY,GAAG,mBAAmB,MAAM;AACxC,+BAAK,YAAY;AAAA,MACb;AAAA,OACA,oBAAI,KAAK,GAAE,eAAe;AAAA;AAExB,UAAA,eAAe,IAAI,QAAQ,UAAU;AACtC,+BAAA,YAAY,KAAK,YAAY;AAAA,EAAY,CACjD;AAGD,MAAI,YAAY,qBAAqB,CAAC,EAAE,UAAU;AAC9C,QAAI,IAAI,WAAW,QAAQ,EAAG,OAAM,aAAa,GAAG;AAC7C,WAAA,EAAE,QAAQ;EAAO,CAC3B;AAGD,SAAO,GAAG;AACd;AAEA,IAAI,UAAA,EAAY,KAAK,MAAM;AACV;AAQjB,CAAC;AAED,IAAI,GAAG,qBAAqB,MAAM;AACxB,QAAA;AACN,MAAI,QAAQ,aAAa,SAAU,KAAI,KAAK;AAChD,CAAC;AAED,IAAI,GAAG,mBAAmB,MAAM;AAC5B,MAAI,KAAK;AAEL,QAAI,IAAI,YAAA,EAAe,KAAI,QAAQ;AACnC,QAAI,MAAM;AAAA,EACd;AACJ,CAAC;AAED,IAAI,GAAG,YAAY,MAAM;AACf,QAAA,aAAa,cAAc;AACjC,MAAI,WAAW,QAAQ;AACR,eAAA,CAAC,EAAE;EAAM,OACjB;AACU;EACjB;AACJ,CAAC;AAGD,QAAQ,OAAO,YAAY,CAAC,GAAG,QAAQ;AAC7B,QAAA,cAAc,IAAI,cAAc;AAAA,IAClC,gBAAgB;AAAA,MACZ;AAAA,MACA,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,IACtB;AAAA,EAAA,CACH;AAED,MAAI,qBAAqB;AACrB,gBAAY,QAAQ,GAAG,mBAAmB,IAAI,GAAG,EAAE;AAAA,EAAA,OAChD;AACH,gBAAY,SAAS,WAAW,EAAE,MAAM,IAAK,CAAA;AAAA,EACjD;AACJ,CAAC;"}